// source: walletgui.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var api_pb = require('./api_pb.js');
goog.object.extend(proto, api_pb);
goog.exportSymbol('proto.walletgui.AccountPreference', null, global);
goog.exportSymbol('proto.walletgui.AltCurrencyRates', null, global);
goog.exportSymbol('proto.walletgui.AltCurrencyRates.AltCurrencyRate', null, global);
goog.exportSymbol('proto.walletgui.AppConfiguration', null, global);
goog.exportSymbol('proto.walletgui.CheckConnectionRequest', null, global);
goog.exportSymbol('proto.walletgui.CheckConnectionResponse', null, global);
goog.exportSymbol('proto.walletgui.ConnectWalletRequest', null, global);
goog.exportSymbol('proto.walletgui.ConnectWalletResponse', null, global);
goog.exportSymbol('proto.walletgui.CreateTransactionRequest', null, global);
goog.exportSymbol('proto.walletgui.CreateTransactionResponse', null, global);
goog.exportSymbol('proto.walletgui.DisplayUnit', null, global);
goog.exportSymbol('proto.walletgui.FiatCurrency', null, global);
goog.exportSymbol('proto.walletgui.GRPCEndpoint', null, global);
goog.exportSymbol('proto.walletgui.GetConfigRequest', null, global);
goog.exportSymbol('proto.walletgui.GetMarketChartRequest', null, global);
goog.exportSymbol('proto.walletgui.GetMarketChartResponse', null, global);
goog.exportSymbol('proto.walletgui.MarketChartDataPoint', null, global);
goog.exportSymbol('proto.walletgui.Network', null, global);
goog.exportSymbol('proto.walletgui.RPCEndpoint', null, global);
goog.exportSymbol('proto.walletgui.SetConfigRequest', null, global);
goog.exportSymbol('proto.walletgui.SetConfigResponse', null, global);
goog.exportSymbol('proto.walletgui.SetConfigResponse.UpdateStatus', null, global);
goog.exportSymbol('proto.walletgui.StakeDiffHistory', null, global);
goog.exportSymbol('proto.walletgui.StakingHistory', null, global);
goog.exportSymbol('proto.walletgui.StakingHistory.StakingHistoryLineItem', null, global);
goog.exportSymbol('proto.walletgui.UIPreferences', null, global);
goog.exportSymbol('proto.walletgui.UnspentOutput', null, global);
goog.exportSymbol('proto.walletgui.WalletPreferences', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.GetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.GetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.GetConfigRequest.displayName = 'proto.walletgui.GetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.SetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.SetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.SetConfigRequest.displayName = 'proto.walletgui.SetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.SetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.SetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.SetConfigResponse.displayName = 'proto.walletgui.SetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.RPCEndpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.RPCEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.RPCEndpoint.displayName = 'proto.walletgui.RPCEndpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.GRPCEndpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.GRPCEndpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.GRPCEndpoint.displayName = 'proto.walletgui.GRPCEndpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.AccountPreference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.AccountPreference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.AccountPreference.displayName = 'proto.walletgui.AccountPreference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.WalletPreferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.WalletPreferences.repeatedFields_, null);
};
goog.inherits(proto.walletgui.WalletPreferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.WalletPreferences.displayName = 'proto.walletgui.WalletPreferences';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.UIPreferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.UIPreferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.UIPreferences.displayName = 'proto.walletgui.UIPreferences';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.AppConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.AppConfiguration.repeatedFields_, null);
};
goog.inherits(proto.walletgui.AppConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.AppConfiguration.displayName = 'proto.walletgui.AppConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.CheckConnectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.CheckConnectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.CheckConnectionRequest.displayName = 'proto.walletgui.CheckConnectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.CheckConnectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.CheckConnectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.CheckConnectionResponse.displayName = 'proto.walletgui.CheckConnectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.ConnectWalletRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.ConnectWalletRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.ConnectWalletRequest.displayName = 'proto.walletgui.ConnectWalletRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.ConnectWalletResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.ConnectWalletResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.ConnectWalletResponse.displayName = 'proto.walletgui.ConnectWalletResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.AltCurrencyRates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.AltCurrencyRates.repeatedFields_, null);
};
goog.inherits(proto.walletgui.AltCurrencyRates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.AltCurrencyRates.displayName = 'proto.walletgui.AltCurrencyRates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.AltCurrencyRates.AltCurrencyRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.AltCurrencyRates.AltCurrencyRate.displayName = 'proto.walletgui.AltCurrencyRates.AltCurrencyRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.GetMarketChartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.GetMarketChartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.GetMarketChartRequest.displayName = 'proto.walletgui.GetMarketChartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.MarketChartDataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.MarketChartDataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.MarketChartDataPoint.displayName = 'proto.walletgui.MarketChartDataPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.GetMarketChartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.GetMarketChartResponse.repeatedFields_, null);
};
goog.inherits(proto.walletgui.GetMarketChartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.GetMarketChartResponse.displayName = 'proto.walletgui.GetMarketChartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.StakingHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.StakingHistory.repeatedFields_, null);
};
goog.inherits(proto.walletgui.StakingHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.StakingHistory.displayName = 'proto.walletgui.StakingHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.StakingHistory.StakingHistoryLineItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.StakingHistory.StakingHistoryLineItem.displayName = 'proto.walletgui.StakingHistory.StakingHistoryLineItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.StakeDiffHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.StakeDiffHistory.repeatedFields_, null);
};
goog.inherits(proto.walletgui.StakeDiffHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.StakeDiffHistory.displayName = 'proto.walletgui.StakeDiffHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.UnspentOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.UnspentOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.UnspentOutput.displayName = 'proto.walletgui.UnspentOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.CreateTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.walletgui.CreateTransactionRequest.repeatedFields_, null);
};
goog.inherits(proto.walletgui.CreateTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.CreateTransactionRequest.displayName = 'proto.walletgui.CreateTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.walletgui.CreateTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.walletgui.CreateTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.walletgui.CreateTransactionResponse.displayName = 'proto.walletgui.CreateTransactionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.GetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.GetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.GetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    passphrase: msg.getPassphrase_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.GetConfigRequest}
 */
proto.walletgui.GetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.GetConfigRequest;
  return proto.walletgui.GetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.GetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.GetConfigRequest}
 */
proto.walletgui.GetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPassphrase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.GetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.GetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.GetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassphrase_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes passphrase = 1;
 * @return {!(string|Uint8Array)}
 */
proto.walletgui.GetConfigRequest.prototype.getPassphrase = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes passphrase = 1;
 * This is a type-conversion wrapper around `getPassphrase()`
 * @return {string}
 */
proto.walletgui.GetConfigRequest.prototype.getPassphrase_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPassphrase()));
};


/**
 * optional bytes passphrase = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPassphrase()`
 * @return {!Uint8Array}
 */
proto.walletgui.GetConfigRequest.prototype.getPassphrase_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPassphrase()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.walletgui.GetConfigRequest} returns this
 */
proto.walletgui.GetConfigRequest.prototype.setPassphrase = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.SetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.SetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.SetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.SetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appConfig: (f = msg.getAppConfig()) && proto.walletgui.AppConfiguration.toObject(includeInstance, f),
    passphrase: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.SetConfigRequest}
 */
proto.walletgui.SetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.SetConfigRequest;
  return proto.walletgui.SetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.SetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.SetConfigRequest}
 */
proto.walletgui.SetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.AppConfiguration;
      reader.readMessage(value,proto.walletgui.AppConfiguration.deserializeBinaryFromReader);
      msg.setAppConfig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassphrase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.SetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.SetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.SetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.SetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.walletgui.AppConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getPassphrase();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AppConfiguration app_config = 1;
 * @return {?proto.walletgui.AppConfiguration}
 */
proto.walletgui.SetConfigRequest.prototype.getAppConfig = function() {
  return /** @type{?proto.walletgui.AppConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.AppConfiguration, 1));
};


/**
 * @param {?proto.walletgui.AppConfiguration|undefined} value
 * @return {!proto.walletgui.SetConfigRequest} returns this
*/
proto.walletgui.SetConfigRequest.prototype.setAppConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.SetConfigRequest} returns this
 */
proto.walletgui.SetConfigRequest.prototype.clearAppConfig = function() {
  return this.setAppConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.SetConfigRequest.prototype.hasAppConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string passphrase = 2;
 * @return {string}
 */
proto.walletgui.SetConfigRequest.prototype.getPassphrase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.SetConfigRequest} returns this
 */
proto.walletgui.SetConfigRequest.prototype.setPassphrase = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.SetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.SetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.SetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.SetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errorCode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errorDescription: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.SetConfigResponse}
 */
proto.walletgui.SetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.SetConfigResponse;
  return proto.walletgui.SetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.SetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.SetConfigResponse}
 */
proto.walletgui.SetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.walletgui.SetConfigResponse.UpdateStatus} */ (reader.readEnum());
      msg.setUpdateStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.SetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.SetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.SetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.SetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getErrorCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getErrorDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.walletgui.SetConfigResponse.UpdateStatus = {
  STATUS_SUCCESS: 0,
  STATUS_ERROR: 1
};

/**
 * optional UpdateStatus update_status = 1;
 * @return {!proto.walletgui.SetConfigResponse.UpdateStatus}
 */
proto.walletgui.SetConfigResponse.prototype.getUpdateStatus = function() {
  return /** @type {!proto.walletgui.SetConfigResponse.UpdateStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.walletgui.SetConfigResponse.UpdateStatus} value
 * @return {!proto.walletgui.SetConfigResponse} returns this
 */
proto.walletgui.SetConfigResponse.prototype.setUpdateStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 error_code = 2;
 * @return {number}
 */
proto.walletgui.SetConfigResponse.prototype.getErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.SetConfigResponse} returns this
 */
proto.walletgui.SetConfigResponse.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string error_description = 3;
 * @return {string}
 */
proto.walletgui.SetConfigResponse.prototype.getErrorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.SetConfigResponse} returns this
 */
proto.walletgui.SetConfigResponse.prototype.setErrorDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.RPCEndpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.RPCEndpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.RPCEndpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.RPCEndpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    certFileName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    certBlob: jspb.Message.getFieldWithDefault(msg, 7, ""),
    network: jspb.Message.getFieldWithDefault(msg, 8, 0),
    label: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.RPCEndpoint}
 */
proto.walletgui.RPCEndpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.RPCEndpoint;
  return proto.walletgui.RPCEndpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.RPCEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.RPCEndpoint}
 */
proto.walletgui.RPCEndpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertFileName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertBlob(value);
      break;
    case 8:
      var value = /** @type {!proto.walletgui.Network} */ (reader.readEnum());
      msg.setNetwork(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.RPCEndpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.RPCEndpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.RPCEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.RPCEndpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCertFileName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCertBlob();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNetwork();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hostname = 2;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.walletgui.RPCEndpoint.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cert_file_name = 6;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getCertFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setCertFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cert_blob = 7;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getCertBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setCertBlob = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Network network = 8;
 * @return {!proto.walletgui.Network}
 */
proto.walletgui.RPCEndpoint.prototype.getNetwork = function() {
  return /** @type {!proto.walletgui.Network} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.walletgui.Network} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setNetwork = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.walletgui.RPCEndpoint.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.RPCEndpoint} returns this
 */
proto.walletgui.RPCEndpoint.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.GRPCEndpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.GRPCEndpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.GRPCEndpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GRPCEndpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    certFileName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    certBlob: jspb.Message.getFieldWithDefault(msg, 5, ""),
    network: jspb.Message.getFieldWithDefault(msg, 6, 0),
    label: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isWatchingOnly: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    activeNetwork: jspb.Message.getFieldWithDefault(msg, 9, 0),
    coinType: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.GRPCEndpoint}
 */
proto.walletgui.GRPCEndpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.GRPCEndpoint;
  return proto.walletgui.GRPCEndpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.GRPCEndpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.GRPCEndpoint}
 */
proto.walletgui.GRPCEndpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertFileName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertBlob(value);
      break;
    case 6:
      var value = /** @type {!proto.walletgui.Network} */ (reader.readEnum());
      msg.setNetwork(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWatchingOnly(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setActiveNetwork(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCoinType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.GRPCEndpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.GRPCEndpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.GRPCEndpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GRPCEndpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCertFileName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCertBlob();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNetwork();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsWatchingOnly();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getActiveNetwork();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getCoinType();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.walletgui.GRPCEndpoint.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hostname = 2;
 * @return {string}
 */
proto.walletgui.GRPCEndpoint.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.walletgui.GRPCEndpoint.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string cert_file_name = 4;
 * @return {string}
 */
proto.walletgui.GRPCEndpoint.prototype.getCertFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setCertFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cert_blob = 5;
 * @return {string}
 */
proto.walletgui.GRPCEndpoint.prototype.getCertBlob = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setCertBlob = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Network network = 6;
 * @return {!proto.walletgui.Network}
 */
proto.walletgui.GRPCEndpoint.prototype.getNetwork = function() {
  return /** @type {!proto.walletgui.Network} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.walletgui.Network} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setNetwork = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string label = 7;
 * @return {string}
 */
proto.walletgui.GRPCEndpoint.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool is_watching_only = 8;
 * @return {boolean}
 */
proto.walletgui.GRPCEndpoint.prototype.getIsWatchingOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setIsWatchingOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 active_network = 9;
 * @return {number}
 */
proto.walletgui.GRPCEndpoint.prototype.getActiveNetwork = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setActiveNetwork = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 coin_type = 10;
 * @return {number}
 */
proto.walletgui.GRPCEndpoint.prototype.getCoinType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.GRPCEndpoint} returns this
 */
proto.walletgui.GRPCEndpoint.prototype.setCoinType = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.AccountPreference.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.AccountPreference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.AccountPreference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AccountPreference.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isHidden: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    displayOrder: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.AccountPreference}
 */
proto.walletgui.AccountPreference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.AccountPreference;
  return proto.walletgui.AccountPreference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.AccountPreference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.AccountPreference}
 */
proto.walletgui.AccountPreference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountNumber(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHidden(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDisplayOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.AccountPreference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.AccountPreference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.AccountPreference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AccountPreference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getIsHidden();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDisplayOrder();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 account_number = 1;
 * @return {number}
 */
proto.walletgui.AccountPreference.prototype.getAccountNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.AccountPreference} returns this
 */
proto.walletgui.AccountPreference.prototype.setAccountNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_hidden = 2;
 * @return {boolean}
 */
proto.walletgui.AccountPreference.prototype.getIsHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.AccountPreference} returns this
 */
proto.walletgui.AccountPreference.prototype.setIsHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 display_order = 3;
 * @return {number}
 */
proto.walletgui.AccountPreference.prototype.getDisplayOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.AccountPreference} returns this
 */
proto.walletgui.AccountPreference.prototype.setDisplayOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.WalletPreferences.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.WalletPreferences.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.WalletPreferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.WalletPreferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.WalletPreferences.toObject = function(includeInstance, msg) {
  var f, obj = {
    walletEndpointId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountPrefsList: jspb.Message.toObjectList(msg.getAccountPrefsList(),
    proto.walletgui.AccountPreference.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.WalletPreferences}
 */
proto.walletgui.WalletPreferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.WalletPreferences;
  return proto.walletgui.WalletPreferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.WalletPreferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.WalletPreferences}
 */
proto.walletgui.WalletPreferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletEndpointId(value);
      break;
    case 2:
      var value = new proto.walletgui.AccountPreference;
      reader.readMessage(value,proto.walletgui.AccountPreference.deserializeBinaryFromReader);
      msg.addAccountPrefs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.WalletPreferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.WalletPreferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.WalletPreferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.WalletPreferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletEndpointId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountPrefsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.walletgui.AccountPreference.serializeBinaryToWriter
    );
  }
};


/**
 * optional string wallet_endpoint_id = 1;
 * @return {string}
 */
proto.walletgui.WalletPreferences.prototype.getWalletEndpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.WalletPreferences} returns this
 */
proto.walletgui.WalletPreferences.prototype.setWalletEndpointId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AccountPreference account_prefs = 2;
 * @return {!Array<!proto.walletgui.AccountPreference>}
 */
proto.walletgui.WalletPreferences.prototype.getAccountPrefsList = function() {
  return /** @type{!Array<!proto.walletgui.AccountPreference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.AccountPreference, 2));
};


/**
 * @param {!Array<!proto.walletgui.AccountPreference>} value
 * @return {!proto.walletgui.WalletPreferences} returns this
*/
proto.walletgui.WalletPreferences.prototype.setAccountPrefsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.walletgui.AccountPreference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.AccountPreference}
 */
proto.walletgui.WalletPreferences.prototype.addAccountPrefs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.walletgui.AccountPreference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.WalletPreferences} returns this
 */
proto.walletgui.WalletPreferences.prototype.clearAccountPrefsList = function() {
  return this.setAccountPrefsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.UIPreferences.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.UIPreferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.UIPreferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.UIPreferences.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayUnit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fiatCurrency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isConfigEncrypted: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.UIPreferences}
 */
proto.walletgui.UIPreferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.UIPreferences;
  return proto.walletgui.UIPreferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.UIPreferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.UIPreferences}
 */
proto.walletgui.UIPreferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.walletgui.DisplayUnit} */ (reader.readEnum());
      msg.setDisplayUnit(value);
      break;
    case 2:
      var value = /** @type {!proto.walletgui.FiatCurrency} */ (reader.readEnum());
      msg.setFiatCurrency(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsConfigEncrypted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.UIPreferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.UIPreferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.UIPreferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.UIPreferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFiatCurrency();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsConfigEncrypted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional DisplayUnit display_unit = 1;
 * @return {!proto.walletgui.DisplayUnit}
 */
proto.walletgui.UIPreferences.prototype.getDisplayUnit = function() {
  return /** @type {!proto.walletgui.DisplayUnit} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.walletgui.DisplayUnit} value
 * @return {!proto.walletgui.UIPreferences} returns this
 */
proto.walletgui.UIPreferences.prototype.setDisplayUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional FiatCurrency fiat_currency = 2;
 * @return {!proto.walletgui.FiatCurrency}
 */
proto.walletgui.UIPreferences.prototype.getFiatCurrency = function() {
  return /** @type {!proto.walletgui.FiatCurrency} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.walletgui.FiatCurrency} value
 * @return {!proto.walletgui.UIPreferences} returns this
 */
proto.walletgui.UIPreferences.prototype.setFiatCurrency = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool is_config_encrypted = 3;
 * @return {boolean}
 */
proto.walletgui.UIPreferences.prototype.getIsConfigEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.UIPreferences} returns this
 */
proto.walletgui.UIPreferences.prototype.setIsConfigEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.AppConfiguration.repeatedFields_ = [2,4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.AppConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.AppConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.AppConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AppConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    dcrdEndpoint: (f = msg.getDcrdEndpoint()) && proto.walletgui.RPCEndpoint.toObject(includeInstance, f),
    walletEndpointsList: jspb.Message.toObjectList(msg.getWalletEndpointsList(),
    proto.walletgui.GRPCEndpoint.toObject, includeInstance),
    defaultWalletEndpointId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    walletPreferencesList: jspb.Message.toObjectList(msg.getWalletPreferencesList(),
    proto.walletgui.WalletPreferences.toObject, includeInstance),
    accountMixerRequestDefaults: (f = msg.getAccountMixerRequestDefaults()) && api_pb.RunAccountMixerRequest.toObject(includeInstance, f),
    runAutoBuyerRequestDefaults: (f = msg.getRunAutoBuyerRequestDefaults()) && api_pb.RunTicketBuyerRequest.toObject(includeInstance, f),
    altDisplayCurrenciesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    uiPreferences: (f = msg.getUiPreferences()) && proto.walletgui.UIPreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.AppConfiguration}
 */
proto.walletgui.AppConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.AppConfiguration;
  return proto.walletgui.AppConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.AppConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.AppConfiguration}
 */
proto.walletgui.AppConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.RPCEndpoint;
      reader.readMessage(value,proto.walletgui.RPCEndpoint.deserializeBinaryFromReader);
      msg.setDcrdEndpoint(value);
      break;
    case 2:
      var value = new proto.walletgui.GRPCEndpoint;
      reader.readMessage(value,proto.walletgui.GRPCEndpoint.deserializeBinaryFromReader);
      msg.addWalletEndpoints(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultWalletEndpointId(value);
      break;
    case 4:
      var value = new proto.walletgui.WalletPreferences;
      reader.readMessage(value,proto.walletgui.WalletPreferences.deserializeBinaryFromReader);
      msg.addWalletPreferences(value);
      break;
    case 5:
      var value = new api_pb.RunAccountMixerRequest;
      reader.readMessage(value,api_pb.RunAccountMixerRequest.deserializeBinaryFromReader);
      msg.setAccountMixerRequestDefaults(value);
      break;
    case 6:
      var value = new api_pb.RunTicketBuyerRequest;
      reader.readMessage(value,api_pb.RunTicketBuyerRequest.deserializeBinaryFromReader);
      msg.setRunAutoBuyerRequestDefaults(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addAltDisplayCurrencies(value);
      break;
    case 8:
      var value = new proto.walletgui.UIPreferences;
      reader.readMessage(value,proto.walletgui.UIPreferences.deserializeBinaryFromReader);
      msg.setUiPreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.AppConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.AppConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.AppConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AppConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDcrdEndpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.walletgui.RPCEndpoint.serializeBinaryToWriter
    );
  }
  f = message.getWalletEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.walletgui.GRPCEndpoint.serializeBinaryToWriter
    );
  }
  f = message.getDefaultWalletEndpointId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWalletPreferencesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.walletgui.WalletPreferences.serializeBinaryToWriter
    );
  }
  f = message.getAccountMixerRequestDefaults();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_pb.RunAccountMixerRequest.serializeBinaryToWriter
    );
  }
  f = message.getRunAutoBuyerRequestDefaults();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      api_pb.RunTicketBuyerRequest.serializeBinaryToWriter
    );
  }
  f = message.getAltDisplayCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getUiPreferences();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.walletgui.UIPreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional RPCEndpoint dcrd_endpoint = 1;
 * @return {?proto.walletgui.RPCEndpoint}
 */
proto.walletgui.AppConfiguration.prototype.getDcrdEndpoint = function() {
  return /** @type{?proto.walletgui.RPCEndpoint} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.RPCEndpoint, 1));
};


/**
 * @param {?proto.walletgui.RPCEndpoint|undefined} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setDcrdEndpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearDcrdEndpoint = function() {
  return this.setDcrdEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.AppConfiguration.prototype.hasDcrdEndpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GRPCEndpoint wallet_endpoints = 2;
 * @return {!Array<!proto.walletgui.GRPCEndpoint>}
 */
proto.walletgui.AppConfiguration.prototype.getWalletEndpointsList = function() {
  return /** @type{!Array<!proto.walletgui.GRPCEndpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.GRPCEndpoint, 2));
};


/**
 * @param {!Array<!proto.walletgui.GRPCEndpoint>} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setWalletEndpointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.walletgui.GRPCEndpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.GRPCEndpoint}
 */
proto.walletgui.AppConfiguration.prototype.addWalletEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.walletgui.GRPCEndpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearWalletEndpointsList = function() {
  return this.setWalletEndpointsList([]);
};


/**
 * optional string default_wallet_endpoint_id = 3;
 * @return {string}
 */
proto.walletgui.AppConfiguration.prototype.getDefaultWalletEndpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.setDefaultWalletEndpointId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated WalletPreferences wallet_preferences = 4;
 * @return {!Array<!proto.walletgui.WalletPreferences>}
 */
proto.walletgui.AppConfiguration.prototype.getWalletPreferencesList = function() {
  return /** @type{!Array<!proto.walletgui.WalletPreferences>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.WalletPreferences, 4));
};


/**
 * @param {!Array<!proto.walletgui.WalletPreferences>} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setWalletPreferencesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.walletgui.WalletPreferences=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.WalletPreferences}
 */
proto.walletgui.AppConfiguration.prototype.addWalletPreferences = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.walletgui.WalletPreferences, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearWalletPreferencesList = function() {
  return this.setWalletPreferencesList([]);
};


/**
 * optional walletrpc.RunAccountMixerRequest account_mixer_request_defaults = 5;
 * @return {?proto.walletrpc.RunAccountMixerRequest}
 */
proto.walletgui.AppConfiguration.prototype.getAccountMixerRequestDefaults = function() {
  return /** @type{?proto.walletrpc.RunAccountMixerRequest} */ (
    jspb.Message.getWrapperField(this, api_pb.RunAccountMixerRequest, 5));
};


/**
 * @param {?proto.walletrpc.RunAccountMixerRequest|undefined} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setAccountMixerRequestDefaults = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearAccountMixerRequestDefaults = function() {
  return this.setAccountMixerRequestDefaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.AppConfiguration.prototype.hasAccountMixerRequestDefaults = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional walletrpc.RunTicketBuyerRequest run_auto_buyer_request_defaults = 6;
 * @return {?proto.walletrpc.RunTicketBuyerRequest}
 */
proto.walletgui.AppConfiguration.prototype.getRunAutoBuyerRequestDefaults = function() {
  return /** @type{?proto.walletrpc.RunTicketBuyerRequest} */ (
    jspb.Message.getWrapperField(this, api_pb.RunTicketBuyerRequest, 6));
};


/**
 * @param {?proto.walletrpc.RunTicketBuyerRequest|undefined} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setRunAutoBuyerRequestDefaults = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearRunAutoBuyerRequestDefaults = function() {
  return this.setRunAutoBuyerRequestDefaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.AppConfiguration.prototype.hasRunAutoBuyerRequestDefaults = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string alt_display_currencies = 7;
 * @return {!Array<string>}
 */
proto.walletgui.AppConfiguration.prototype.getAltDisplayCurrenciesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.setAltDisplayCurrenciesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.addAltDisplayCurrencies = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearAltDisplayCurrenciesList = function() {
  return this.setAltDisplayCurrenciesList([]);
};


/**
 * optional UIPreferences ui_preferences = 8;
 * @return {?proto.walletgui.UIPreferences}
 */
proto.walletgui.AppConfiguration.prototype.getUiPreferences = function() {
  return /** @type{?proto.walletgui.UIPreferences} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.UIPreferences, 8));
};


/**
 * @param {?proto.walletgui.UIPreferences|undefined} value
 * @return {!proto.walletgui.AppConfiguration} returns this
*/
proto.walletgui.AppConfiguration.prototype.setUiPreferences = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.AppConfiguration} returns this
 */
proto.walletgui.AppConfiguration.prototype.clearUiPreferences = function() {
  return this.setUiPreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.AppConfiguration.prototype.hasUiPreferences = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.CheckConnectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.CheckConnectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.CheckConnectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CheckConnectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpcEndpoint: (f = msg.getGrpcEndpoint()) && proto.walletgui.GRPCEndpoint.toObject(includeInstance, f),
    rpcEndpoint: (f = msg.getRpcEndpoint()) && proto.walletgui.RPCEndpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.CheckConnectionRequest}
 */
proto.walletgui.CheckConnectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.CheckConnectionRequest;
  return proto.walletgui.CheckConnectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.CheckConnectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.CheckConnectionRequest}
 */
proto.walletgui.CheckConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.GRPCEndpoint;
      reader.readMessage(value,proto.walletgui.GRPCEndpoint.deserializeBinaryFromReader);
      msg.setGrpcEndpoint(value);
      break;
    case 2:
      var value = new proto.walletgui.RPCEndpoint;
      reader.readMessage(value,proto.walletgui.RPCEndpoint.deserializeBinaryFromReader);
      msg.setRpcEndpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.CheckConnectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.CheckConnectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.CheckConnectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CheckConnectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpcEndpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.walletgui.GRPCEndpoint.serializeBinaryToWriter
    );
  }
  f = message.getRpcEndpoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.walletgui.RPCEndpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional GRPCEndpoint grpc_endpoint = 1;
 * @return {?proto.walletgui.GRPCEndpoint}
 */
proto.walletgui.CheckConnectionRequest.prototype.getGrpcEndpoint = function() {
  return /** @type{?proto.walletgui.GRPCEndpoint} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.GRPCEndpoint, 1));
};


/**
 * @param {?proto.walletgui.GRPCEndpoint|undefined} value
 * @return {!proto.walletgui.CheckConnectionRequest} returns this
*/
proto.walletgui.CheckConnectionRequest.prototype.setGrpcEndpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.CheckConnectionRequest} returns this
 */
proto.walletgui.CheckConnectionRequest.prototype.clearGrpcEndpoint = function() {
  return this.setGrpcEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.CheckConnectionRequest.prototype.hasGrpcEndpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RPCEndpoint rpc_endpoint = 2;
 * @return {?proto.walletgui.RPCEndpoint}
 */
proto.walletgui.CheckConnectionRequest.prototype.getRpcEndpoint = function() {
  return /** @type{?proto.walletgui.RPCEndpoint} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.RPCEndpoint, 2));
};


/**
 * @param {?proto.walletgui.RPCEndpoint|undefined} value
 * @return {!proto.walletgui.CheckConnectionRequest} returns this
*/
proto.walletgui.CheckConnectionRequest.prototype.setRpcEndpoint = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.CheckConnectionRequest} returns this
 */
proto.walletgui.CheckConnectionRequest.prototype.clearRpcEndpoint = function() {
  return this.setRpcEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.CheckConnectionRequest.prototype.hasRpcEndpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.CheckConnectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.CheckConnectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.CheckConnectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CheckConnectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.CheckConnectionResponse}
 */
proto.walletgui.CheckConnectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.CheckConnectionResponse;
  return proto.walletgui.CheckConnectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.CheckConnectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.CheckConnectionResponse}
 */
proto.walletgui.CheckConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.CheckConnectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.CheckConnectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.CheckConnectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CheckConnectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.walletgui.CheckConnectionResponse.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.CheckConnectionResponse} returns this
 */
proto.walletgui.CheckConnectionResponse.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.walletgui.CheckConnectionResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.CheckConnectionResponse} returns this
 */
proto.walletgui.CheckConnectionResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.ConnectWalletRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.ConnectWalletRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.ConnectWalletRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.ConnectWalletRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    walletEndpointId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.ConnectWalletRequest}
 */
proto.walletgui.ConnectWalletRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.ConnectWalletRequest;
  return proto.walletgui.ConnectWalletRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.ConnectWalletRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.ConnectWalletRequest}
 */
proto.walletgui.ConnectWalletRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletEndpointId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.ConnectWalletRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.ConnectWalletRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.ConnectWalletRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.ConnectWalletRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWalletEndpointId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string wallet_endpoint_id = 1;
 * @return {string}
 */
proto.walletgui.ConnectWalletRequest.prototype.getWalletEndpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.ConnectWalletRequest} returns this
 */
proto.walletgui.ConnectWalletRequest.prototype.setWalletEndpointId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.ConnectWalletResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.ConnectWalletResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.ConnectWalletResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.ConnectWalletResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endpoint: (f = msg.getEndpoint()) && proto.walletgui.GRPCEndpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.ConnectWalletResponse}
 */
proto.walletgui.ConnectWalletResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.ConnectWalletResponse;
  return proto.walletgui.ConnectWalletResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.ConnectWalletResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.ConnectWalletResponse}
 */
proto.walletgui.ConnectWalletResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = new proto.walletgui.GRPCEndpoint;
      reader.readMessage(value,proto.walletgui.GRPCEndpoint.deserializeBinaryFromReader);
      msg.setEndpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.ConnectWalletResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.ConnectWalletResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.ConnectWalletResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.ConnectWalletResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndpoint();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.walletgui.GRPCEndpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.walletgui.ConnectWalletResponse.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.ConnectWalletResponse} returns this
 */
proto.walletgui.ConnectWalletResponse.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.walletgui.ConnectWalletResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.ConnectWalletResponse} returns this
 */
proto.walletgui.ConnectWalletResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GRPCEndpoint endpoint = 3;
 * @return {?proto.walletgui.GRPCEndpoint}
 */
proto.walletgui.ConnectWalletResponse.prototype.getEndpoint = function() {
  return /** @type{?proto.walletgui.GRPCEndpoint} */ (
    jspb.Message.getWrapperField(this, proto.walletgui.GRPCEndpoint, 3));
};


/**
 * @param {?proto.walletgui.GRPCEndpoint|undefined} value
 * @return {!proto.walletgui.ConnectWalletResponse} returns this
*/
proto.walletgui.ConnectWalletResponse.prototype.setEndpoint = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.walletgui.ConnectWalletResponse} returns this
 */
proto.walletgui.ConnectWalletResponse.prototype.clearEndpoint = function() {
  return this.setEndpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.walletgui.ConnectWalletResponse.prototype.hasEndpoint = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.AltCurrencyRates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.AltCurrencyRates.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.AltCurrencyRates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.AltCurrencyRates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AltCurrencyRates.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratesList: jspb.Message.toObjectList(msg.getRatesList(),
    proto.walletgui.AltCurrencyRates.AltCurrencyRate.toObject, includeInstance),
    lastUpdatedTs: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.AltCurrencyRates}
 */
proto.walletgui.AltCurrencyRates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.AltCurrencyRates;
  return proto.walletgui.AltCurrencyRates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.AltCurrencyRates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.AltCurrencyRates}
 */
proto.walletgui.AltCurrencyRates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.AltCurrencyRates.AltCurrencyRate;
      reader.readMessage(value,proto.walletgui.AltCurrencyRates.AltCurrencyRate.deserializeBinaryFromReader);
      msg.addRates(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastUpdatedTs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.AltCurrencyRates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.AltCurrencyRates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.AltCurrencyRates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AltCurrencyRates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.walletgui.AltCurrencyRates.AltCurrencyRate.serializeBinaryToWriter
    );
  }
  f = message.getLastUpdatedTs();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.AltCurrencyRates.AltCurrencyRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.AltCurrencyRates.AltCurrencyRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currentRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.AltCurrencyRates.AltCurrencyRate}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.AltCurrencyRates.AltCurrencyRate;
  return proto.walletgui.AltCurrencyRates.AltCurrencyRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.AltCurrencyRates.AltCurrencyRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.AltCurrencyRates.AltCurrencyRate}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurrentRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.AltCurrencyRates.AltCurrencyRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.AltCurrencyRates.AltCurrencyRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrentRate();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional string currency_code = 1;
 * @return {string}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.AltCurrencyRates.AltCurrencyRate} returns this
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float current_rate = 2;
 * @return {number}
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.getCurrentRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.AltCurrencyRates.AltCurrencyRate} returns this
 */
proto.walletgui.AltCurrencyRates.AltCurrencyRate.prototype.setCurrentRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated AltCurrencyRate rates = 1;
 * @return {!Array<!proto.walletgui.AltCurrencyRates.AltCurrencyRate>}
 */
proto.walletgui.AltCurrencyRates.prototype.getRatesList = function() {
  return /** @type{!Array<!proto.walletgui.AltCurrencyRates.AltCurrencyRate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.AltCurrencyRates.AltCurrencyRate, 1));
};


/**
 * @param {!Array<!proto.walletgui.AltCurrencyRates.AltCurrencyRate>} value
 * @return {!proto.walletgui.AltCurrencyRates} returns this
*/
proto.walletgui.AltCurrencyRates.prototype.setRatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.walletgui.AltCurrencyRates.AltCurrencyRate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.AltCurrencyRates.AltCurrencyRate}
 */
proto.walletgui.AltCurrencyRates.prototype.addRates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.walletgui.AltCurrencyRates.AltCurrencyRate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.AltCurrencyRates} returns this
 */
proto.walletgui.AltCurrencyRates.prototype.clearRatesList = function() {
  return this.setRatesList([]);
};


/**
 * optional int64 last_updated_ts = 2;
 * @return {number}
 */
proto.walletgui.AltCurrencyRates.prototype.getLastUpdatedTs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.AltCurrencyRates} returns this
 */
proto.walletgui.AltCurrencyRates.prototype.setLastUpdatedTs = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.GetMarketChartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.GetMarketChartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.GetMarketChartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetMarketChartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    days: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.GetMarketChartRequest}
 */
proto.walletgui.GetMarketChartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.GetMarketChartRequest;
  return proto.walletgui.GetMarketChartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.GetMarketChartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.GetMarketChartRequest}
 */
proto.walletgui.GetMarketChartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.GetMarketChartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.GetMarketChartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.GetMarketChartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetMarketChartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDays();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string currency_code = 1;
 * @return {string}
 */
proto.walletgui.GetMarketChartRequest.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.GetMarketChartRequest} returns this
 */
proto.walletgui.GetMarketChartRequest.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 days = 2;
 * @return {number}
 */
proto.walletgui.GetMarketChartRequest.prototype.getDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.GetMarketChartRequest} returns this
 */
proto.walletgui.GetMarketChartRequest.prototype.setDays = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.MarketChartDataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.MarketChartDataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.MarketChartDataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.MarketChartDataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exchangeRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.MarketChartDataPoint}
 */
proto.walletgui.MarketChartDataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.MarketChartDataPoint;
  return proto.walletgui.MarketChartDataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.MarketChartDataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.MarketChartDataPoint}
 */
proto.walletgui.MarketChartDataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setExchangeRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.MarketChartDataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.MarketChartDataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.MarketChartDataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.MarketChartDataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getExchangeRate();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.walletgui.MarketChartDataPoint.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.MarketChartDataPoint} returns this
 */
proto.walletgui.MarketChartDataPoint.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float exchange_rate = 2;
 * @return {number}
 */
proto.walletgui.MarketChartDataPoint.prototype.getExchangeRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.MarketChartDataPoint} returns this
 */
proto.walletgui.MarketChartDataPoint.prototype.setExchangeRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.GetMarketChartResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.GetMarketChartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.GetMarketChartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.GetMarketChartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetMarketChartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datapointsList: jspb.Message.toObjectList(msg.getDatapointsList(),
    proto.walletgui.MarketChartDataPoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.GetMarketChartResponse}
 */
proto.walletgui.GetMarketChartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.GetMarketChartResponse;
  return proto.walletgui.GetMarketChartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.GetMarketChartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.GetMarketChartResponse}
 */
proto.walletgui.GetMarketChartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.MarketChartDataPoint;
      reader.readMessage(value,proto.walletgui.MarketChartDataPoint.deserializeBinaryFromReader);
      msg.addDatapoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.GetMarketChartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.GetMarketChartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.GetMarketChartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.GetMarketChartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatapointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.walletgui.MarketChartDataPoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarketChartDataPoint datapoints = 1;
 * @return {!Array<!proto.walletgui.MarketChartDataPoint>}
 */
proto.walletgui.GetMarketChartResponse.prototype.getDatapointsList = function() {
  return /** @type{!Array<!proto.walletgui.MarketChartDataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.MarketChartDataPoint, 1));
};


/**
 * @param {!Array<!proto.walletgui.MarketChartDataPoint>} value
 * @return {!proto.walletgui.GetMarketChartResponse} returns this
*/
proto.walletgui.GetMarketChartResponse.prototype.setDatapointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.walletgui.MarketChartDataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.MarketChartDataPoint}
 */
proto.walletgui.GetMarketChartResponse.prototype.addDatapoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.walletgui.MarketChartDataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.GetMarketChartResponse} returns this
 */
proto.walletgui.GetMarketChartResponse.prototype.clearDatapointsList = function() {
  return this.setDatapointsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.StakingHistory.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.StakingHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.StakingHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.StakingHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakingHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastBlock: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lineItemsList: jspb.Message.toObjectList(msg.getLineItemsList(),
    proto.walletgui.StakingHistory.StakingHistoryLineItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.StakingHistory}
 */
proto.walletgui.StakingHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.StakingHistory;
  return proto.walletgui.StakingHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.StakingHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.StakingHistory}
 */
proto.walletgui.StakingHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastBlock(value);
      break;
    case 2:
      var value = new proto.walletgui.StakingHistory.StakingHistoryLineItem;
      reader.readMessage(value,proto.walletgui.StakingHistory.StakingHistoryLineItem.deserializeBinaryFromReader);
      msg.addLineItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.StakingHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.StakingHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.StakingHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakingHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastBlock();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLineItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.walletgui.StakingHistory.StakingHistoryLineItem.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.StakingHistory.StakingHistoryLineItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.StakingHistory.StakingHistoryLineItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    txType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rewardCredit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ticketCostCredit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ticketCostDebit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    feeDebit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    txHash: msg.getTxHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.StakingHistory.StakingHistoryLineItem;
  return proto.walletgui.StakingHistory.StakingHistoryLineItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.StakingHistory.StakingHistoryLineItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.walletrpc.TransactionDetails.TransactionType} */ (reader.readEnum());
      msg.setTxType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRewardCredit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketCostCredit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketCostDebit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeeDebit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.StakingHistory.StakingHistoryLineItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.StakingHistory.StakingHistoryLineItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRewardCredit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTicketCostCredit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTicketCostDebit();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getFeeDebit();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTxHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * optional walletrpc.TransactionDetails.TransactionType tx_type = 1;
 * @return {!proto.walletrpc.TransactionDetails.TransactionType}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTxType = function() {
  return /** @type {!proto.walletrpc.TransactionDetails.TransactionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.walletrpc.TransactionDetails.TransactionType} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setTxType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 reward_credit = 2;
 * @return {number}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getRewardCredit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setRewardCredit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ticket_cost_credit = 3;
 * @return {number}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTicketCostCredit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setTicketCostCredit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 ticket_cost_debit = 4;
 * @return {number}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTicketCostDebit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setTicketCostDebit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 fee_debit = 5;
 * @return {number}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getFeeDebit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setFeeDebit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bytes tx_hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTxHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes tx_hash = 7;
 * This is a type-conversion wrapper around `getTxHash()`
 * @return {string}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTxHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxHash()));
};


/**
 * optional bytes tx_hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxHash()`
 * @return {!Uint8Array}
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.getTxHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem} returns this
 */
proto.walletgui.StakingHistory.StakingHistoryLineItem.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional int64 last_block = 1;
 * @return {number}
 */
proto.walletgui.StakingHistory.prototype.getLastBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakingHistory} returns this
 */
proto.walletgui.StakingHistory.prototype.setLastBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated StakingHistoryLineItem line_items = 2;
 * @return {!Array<!proto.walletgui.StakingHistory.StakingHistoryLineItem>}
 */
proto.walletgui.StakingHistory.prototype.getLineItemsList = function() {
  return /** @type{!Array<!proto.walletgui.StakingHistory.StakingHistoryLineItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.StakingHistory.StakingHistoryLineItem, 2));
};


/**
 * @param {!Array<!proto.walletgui.StakingHistory.StakingHistoryLineItem>} value
 * @return {!proto.walletgui.StakingHistory} returns this
*/
proto.walletgui.StakingHistory.prototype.setLineItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.walletgui.StakingHistory.StakingHistoryLineItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.StakingHistory.StakingHistoryLineItem}
 */
proto.walletgui.StakingHistory.prototype.addLineItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.walletgui.StakingHistory.StakingHistoryLineItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.StakingHistory} returns this
 */
proto.walletgui.StakingHistory.prototype.clearLineItemsList = function() {
  return this.setLineItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.StakeDiffHistory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.StakeDiffHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.StakeDiffHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.StakeDiffHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakeDiffHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    sdiffValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    startBlock: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endBlock: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.StakeDiffHistory}
 */
proto.walletgui.StakeDiffHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.StakeDiffHistory;
  return proto.walletgui.StakeDiffHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.StakeDiffHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.StakeDiffHistory}
 */
proto.walletgui.StakeDiffHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setSdiffValuesList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartBlock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.StakeDiffHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.StakeDiffHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.StakeDiffHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.StakeDiffHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSdiffValuesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getStartBlock();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEndBlock();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated float sdiff_values = 1;
 * @return {!Array<number>}
 */
proto.walletgui.StakeDiffHistory.prototype.getSdiffValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.walletgui.StakeDiffHistory} returns this
 */
proto.walletgui.StakeDiffHistory.prototype.setSdiffValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.walletgui.StakeDiffHistory} returns this
 */
proto.walletgui.StakeDiffHistory.prototype.addSdiffValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.StakeDiffHistory} returns this
 */
proto.walletgui.StakeDiffHistory.prototype.clearSdiffValuesList = function() {
  return this.setSdiffValuesList([]);
};


/**
 * optional uint32 start_block = 2;
 * @return {number}
 */
proto.walletgui.StakeDiffHistory.prototype.getStartBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakeDiffHistory} returns this
 */
proto.walletgui.StakeDiffHistory.prototype.setStartBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 end_block = 3;
 * @return {number}
 */
proto.walletgui.StakeDiffHistory.prototype.getEndBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.StakeDiffHistory} returns this
 */
proto.walletgui.StakeDiffHistory.prototype.setEndBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.UnspentOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.UnspentOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.UnspentOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.UnspentOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64(),
    outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pkScript: msg.getPkScript_asB64(),
    receiveTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fromCoinbase: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    tree: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amountSum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    scriptClass: jspb.Message.getFieldWithDefault(msg, 9, 0),
    spendable: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    address: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.UnspentOutput}
 */
proto.walletgui.UnspentOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.UnspentOutput;
  return proto.walletgui.UnspentOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.UnspentOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.UnspentOutput}
 */
proto.walletgui.UnspentOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutputIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPkScript(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceiveTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFromCoinbase(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTree(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmountSum(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScriptClass(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpendable(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.UnspentOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.UnspentOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.UnspentOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.UnspentOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutputIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPkScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getReceiveTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getFromCoinbase();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTree();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAmountSum();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getScriptClass();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getSpendable();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.walletgui.UnspentOutput.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.walletgui.UnspentOutput.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.walletgui.UnspentOutput.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setTransactionHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 output_index = 2;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getOutputIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setOutputIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 amount = 3;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes pk_script = 4;
 * @return {!(string|Uint8Array)}
 */
proto.walletgui.UnspentOutput.prototype.getPkScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes pk_script = 4;
 * This is a type-conversion wrapper around `getPkScript()`
 * @return {string}
 */
proto.walletgui.UnspentOutput.prototype.getPkScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPkScript()));
};


/**
 * optional bytes pk_script = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPkScript()`
 * @return {!Uint8Array}
 */
proto.walletgui.UnspentOutput.prototype.getPkScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPkScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setPkScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 receive_time = 5;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getReceiveTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setReceiveTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool from_coinbase = 6;
 * @return {boolean}
 */
proto.walletgui.UnspentOutput.prototype.getFromCoinbase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setFromCoinbase = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 tree = 7;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getTree = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setTree = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 amount_sum = 8;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getAmountSum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setAmountSum = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 script_class = 9;
 * @return {number}
 */
proto.walletgui.UnspentOutput.prototype.getScriptClass = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setScriptClass = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool spendable = 10;
 * @return {boolean}
 */
proto.walletgui.UnspentOutput.prototype.getSpendable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setSpendable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string address = 11;
 * @return {string}
 */
proto.walletgui.UnspentOutput.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.walletgui.UnspentOutput} returns this
 */
proto.walletgui.UnspentOutput.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.walletgui.CreateTransactionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.CreateTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.CreateTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.CreateTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CreateTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceOutputsList: jspb.Message.toObjectList(msg.getSourceOutputsList(),
    proto.walletgui.UnspentOutput.toObject, includeInstance),
    amountsMap: (f = msg.getAmountsMap()) ? f.toObject(includeInstance, undefined) : [],
    lockTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, 0),
    feeRate: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sourceAccount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    changeAccount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.CreateTransactionRequest}
 */
proto.walletgui.CreateTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.CreateTransactionRequest;
  return proto.walletgui.CreateTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.CreateTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.CreateTransactionRequest}
 */
proto.walletgui.CreateTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.walletgui.UnspentOutput;
      reader.readMessage(value,proto.walletgui.UnspentOutput.deserializeBinaryFromReader);
      msg.addSourceOutputs(value);
      break;
    case 2:
      var value = msg.getAmountsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLockTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeeRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSourceAccount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChangeAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.CreateTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.CreateTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.CreateTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CreateTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.walletgui.UnspentOutput.serializeBinaryToWriter
    );
  }
  f = message.getAmountsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
  f = message.getLockTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getFeeRate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSourceAccount();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getChangeAccount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * repeated UnspentOutput source_outputs = 1;
 * @return {!Array<!proto.walletgui.UnspentOutput>}
 */
proto.walletgui.CreateTransactionRequest.prototype.getSourceOutputsList = function() {
  return /** @type{!Array<!proto.walletgui.UnspentOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.walletgui.UnspentOutput, 1));
};


/**
 * @param {!Array<!proto.walletgui.UnspentOutput>} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
*/
proto.walletgui.CreateTransactionRequest.prototype.setSourceOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.walletgui.UnspentOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.walletgui.UnspentOutput}
 */
proto.walletgui.CreateTransactionRequest.prototype.addSourceOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.walletgui.UnspentOutput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.clearSourceOutputsList = function() {
  return this.setSourceOutputsList([]);
};


/**
 * map<string, int64> amounts = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.walletgui.CreateTransactionRequest.prototype.getAmountsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.clearAmountsMap = function() {
  this.getAmountsMap().clear();
  return this;};


/**
 * optional int64 lock_time = 3;
 * @return {number}
 */
proto.walletgui.CreateTransactionRequest.prototype.getLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.setLockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 expiry = 4;
 * @return {number}
 */
proto.walletgui.CreateTransactionRequest.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 fee_rate = 5;
 * @return {number}
 */
proto.walletgui.CreateTransactionRequest.prototype.getFeeRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.setFeeRate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 source_account = 6;
 * @return {number}
 */
proto.walletgui.CreateTransactionRequest.prototype.getSourceAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.setSourceAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 change_account = 7;
 * @return {number}
 */
proto.walletgui.CreateTransactionRequest.prototype.getChangeAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionRequest} returns this
 */
proto.walletgui.CreateTransactionRequest.prototype.setChangeAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.walletgui.CreateTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.walletgui.CreateTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.walletgui.CreateTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CreateTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unsignedTransaction: msg.getUnsignedTransaction_asB64(),
    estimatedSignedSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.walletgui.CreateTransactionResponse}
 */
proto.walletgui.CreateTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.walletgui.CreateTransactionResponse;
  return proto.walletgui.CreateTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.walletgui.CreateTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.walletgui.CreateTransactionResponse}
 */
proto.walletgui.CreateTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUnsignedTransaction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEstimatedSignedSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.walletgui.CreateTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.walletgui.CreateTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.walletgui.CreateTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.walletgui.CreateTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnsignedTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEstimatedSignedSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes unsigned_transaction = 1;
 * @return {!(string|Uint8Array)}
 */
proto.walletgui.CreateTransactionResponse.prototype.getUnsignedTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes unsigned_transaction = 1;
 * This is a type-conversion wrapper around `getUnsignedTransaction()`
 * @return {string}
 */
proto.walletgui.CreateTransactionResponse.prototype.getUnsignedTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUnsignedTransaction()));
};


/**
 * optional bytes unsigned_transaction = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnsignedTransaction()`
 * @return {!Uint8Array}
 */
proto.walletgui.CreateTransactionResponse.prototype.getUnsignedTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUnsignedTransaction()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.walletgui.CreateTransactionResponse} returns this
 */
proto.walletgui.CreateTransactionResponse.prototype.setUnsignedTransaction = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 estimated_signed_size = 2;
 * @return {number}
 */
proto.walletgui.CreateTransactionResponse.prototype.getEstimatedSignedSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.walletgui.CreateTransactionResponse} returns this
 */
proto.walletgui.CreateTransactionResponse.prototype.setEstimatedSignedSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.walletgui.Network = {
  MAINNET: 0,
  TESTNET: 1,
  SIMNET: 2
};

/**
 * @enum {number}
 */
proto.walletgui.DisplayUnit = {
  DCR: 0,
  ATOMS: 1
};

/**
 * @enum {number}
 */
proto.walletgui.FiatCurrency = {
  USD: 0,
  EUR: 1
};

goog.object.extend(exports, proto.walletgui);
